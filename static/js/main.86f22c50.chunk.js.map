{"version":3,"sources":["redux/store.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Message/Message.jsx","App.jsx","index.js"],"names":["FILTER","ADD_CONTACT","DELETE_CONTACT","rootReducer","combineReducers","filter","state","action","type","payload","contacts","element","id","store","createStore","devToolsEnhancer","INITIAL_STATE","name","number","ContactForm","nameId","nanoid","numberId","reset","setState","onInputHandler","target","value","onSubmitHandler","event","preventDefault","props","find","item","info","text","delay","contactData","className","onSubmit","this","htmlFor","pattern","title","required","onChange","Component","ContactItem","deleteContact","onClick","ContactList","map","filterId","connect","dispatch","Message","App","console","log","addContact","filterOnChange","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","filteredContacts","filterContacts","query","toLocaleLowerCase","includes","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86f22c50.chunk.js","sourcesContent":["import { createStore, combineReducers } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n// Action types\nconst FILTER = \"filter\";\nconst ADD_CONTACT = \"contacts/add\";\nconst DELETE_CONTACT = \"contacts/delete\";\n\n// Action creators\nexport function changeFilter(value) {\n  return {\n    type: FILTER,\n    payload: value,\n  };\n}\nexport function addContact(value) {\n  return {\n    type: ADD_CONTACT,\n    payload: value,\n  };\n}\nexport function deleteContact(value) {\n  return {\n    type: DELETE_CONTACT,\n    payload: value,\n  };\n}\n\n// Reducer\nfunction filter(state = \"\", action) {\n  switch (action.type) {\n    case FILTER:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\nfunction contacts(state = [], action) {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return [...state, action.payload];\n    case DELETE_CONTACT:\n      return [...state.filter((element) => element.id !== action.payload)];\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  filter: filter,\n  contacts: contacts,\n});\n\n// Store\nexport const store = createStore(rootReducer, devToolsEnhancer());\n","import \"./ContactForm.scss\";\nimport { nanoid } from \"nanoid\";\nimport { info } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  nameId = nanoid();\n  numberId = nanoid();\n\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  onInputHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const { contacts } = this.props;\n    if (!contacts.find((item) => item.name === this.state.name)) {\n      const contactData = { name: this.state.name, number: this.state.number, id: nanoid() };\n      this.props.onSubmitHandler(contactData);\n      this.reset();\n    } else {\n      info({ text: `${this.state.name} is already in contacts.`, delay: 700 });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onSubmitHandler}>\n        <label className=\"form__title\" htmlFor={this.nameId}>\n          <h3 className=\"phonebook__headline\">Name</h3>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <label className=\"form__title\" htmlFor={this.numberId}>\n          <h3 className=\"phonebook__headline\">Number</h3>\n          <input\n            className=\"form__input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={this.numberId}\n            value={this.state.number}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <button className=\"form__submit\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onSubmitHandler: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ContactItem.scss\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactItem({ name, number, deleteContact }) {\n  return (\n    <li className=\"list__item\">\n      <p className=\"list__text\">\n        <span>{name} :</span> {number}\n      </p>\n      <button className=\"list__btn\" onClick={deleteContact} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className=\"list\">\n      {contacts.map((item) => (\n        <ContactItem\n          deleteContact={() => deleteContact(item.id)}\n          key={item.id}\n          name={item.name}\n          number={item.number}\n        />\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./Filter.scss\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/store\";\n\nconst filterId = nanoid();\n\nfunction Filter({ onChange, value }) {\n  return (\n    <div className=\"filter\">\n      <h3 className=\"phonebook__headline\">Find contact by name</h3>\n      <label className=\"filter__title\" htmlFor={filterId}>\n        <input\n          value={value}\n          onChange={onChange}\n          className=\"filter__input\"\n          type=\"text\"\n          name=\"filter\"\n          id={filterId}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: ({ target }) => dispatch(changeFilter(target.value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport './Message.scss';\n\nexport default function Message() {\n  return <h3 className=\"message__headline\">Filtered results:</h3>;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { info } from \"@pnotify/core\";\n\nimport { addContact, deleteContact } from \"./redux/store\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Message from \"./components/Message/Message\";\n\nimport \"./styles/App.scss\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    parsedContacts && this.setState({ contacts: parsedContacts });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.props.contacts !== prevProps.contacts &&\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n  }\n  deleteContact = (id) => {\n    this.props.deleteContact(id);\n    console.log(this.props.contacts);\n  };\n\n  addContact = (contactData) => {\n    this.props.addContact(contactData);\n    info({ text: `Contact successfully added`, delay: 700 });\n    console.log(contactData);\n  };\n\n  filterOnChange = ({ target }) => this.props.filterOnChange(target.value);\n\n  render() {\n    return (\n      <>\n        <div className=\"phonebook__wrapper\">\n          <div className=\"form-wrapper\">\n            <h1 className=\"headline\">Phonebook</h1>\n\n            <h2>Add new contact</h2>\n            <ContactForm onSubmitHandler={this.addContact} contacts={this.props.contacts} />\n          </div>\n          <div className=\"list-wrapper\">\n            <h2>Contacts</h2>\n            <Filter />\n\n            {this.props.filter && <Message />}\n\n            <ContactList\n              deleteContact={this.deleteContact}\n              contacts={this.props.filteredContacts}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst filterContacts = (query, contacts) =>\n  contacts.filter((element) =>\n    element.name.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n  );\n\nconst mapStateToProps = ({ contacts, filter }) => ({\n  filteredContacts: filterContacts(filter, contacts),\n  contacts: contacts,\n  filter:filter\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (contact) => dispatch(addContact(contact)),\n  deleteContact: (contact) => dispatch(deleteContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}