{"version":3,"sources":["redux/contacts/items/items-actions.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","redux/contacts/filter/filter-actions.js","components/Filter/Filter.jsx","components/Message/Message.jsx","App.jsx","redux/contacts/items/items-reducers.js","redux/contacts/filter/filter-reducers.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["addContact","createAction","deleteContact","INITIAL_STATE","name","number","ContactForm","state","nameId","nanoid","numberId","reset","setState","onInputHandler","target","value","onSubmitHandler","event","preventDefault","props","contacts","find","item","info","text","delay","contactData","id","className","onSubmit","this","htmlFor","type","pattern","title","required","onChange","Component","connect","items","ContactItem","onClick","ContactList","map","changeFilter","filterId","filter","dispatch","Message","App","filterOnChange","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","filteredContacts","filterContacts","query","element","toLocaleLowerCase","includes","contact","createReducer","payload","_","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1eedb2e4.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contacts/add\");\nexport const deleteContact = createAction(\"contacts/delete\");\n","import \"./ContactForm.scss\";\nimport { nanoid } from \"nanoid\";\nimport { info } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  nameId = nanoid();\n  numberId = nanoid();\n\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  onInputHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const { contacts } = this.props;\n    if (!contacts.find((item) => item.name === this.state.name)) {\n      const contactData = { name: this.state.name, number: this.state.number, id: nanoid() };\n      this.props.onSubmitHandler(contactData);\n      this.reset();\n    } else {\n      info({ text: `${this.state.name} is already in contacts.`, delay: 700 });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onSubmitHandler}>\n        <label className=\"form__title\" htmlFor={this.nameId}>\n          <h3 className=\"phonebook__headline\">Name</h3>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <label className=\"form__title\" htmlFor={this.numberId}>\n          <h3 className=\"phonebook__headline\">Number</h3>\n          <input\n            className=\"form__input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={this.numberId}\n            value={this.state.number}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <button className=\"form__submit\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: contacts.items,\n});\n\nexport default connect(mapStateToProps, null)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onSubmitHandler: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ContactItem.scss\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactItem({ name, number, deleteContact }) {\n  return (\n    <li className=\"list__item\">\n      <p className=\"list__text\">\n        <span>{name} :</span> {number}\n      </p>\n      <button className=\"list__btn\" onClick={deleteContact} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className=\"list\">\n      {contacts.map((item) => (\n        <ContactItem\n          deleteContact={() => deleteContact(item.id)}\n          key={item.id}\n          name={item.name}\n          number={item.number}\n        />\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"filter\");","import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./Filter.scss\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/filter/filter-actions\";\n\nconst filterId = nanoid();\n\nfunction Filter({ onChange, value }) {\n  return (\n    <div className=\"filter\">\n      <h3 className=\"phonebook__headline\">Find contact by name</h3>\n      <label className=\"filter__title\" htmlFor={filterId}>\n        <input\n          value={value}\n          onChange={onChange}\n          className=\"filter__input\"\n          type=\"text\"\n          name=\"filter\"\n          id={filterId}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  value: contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: ({ target }) => dispatch(changeFilter(target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport './Message.scss';\n\nexport default function Message() {\n  return <h3 className=\"message__headline\">Filtered results:</h3>;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { info } from \"@pnotify/core\";\n\nimport { addContact, deleteContact } from \"./redux/contacts/items/items-actions\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Message from \"./components/Message/Message\";\n\nimport \"./styles/App.scss\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    parsedContacts && this.setState({ contacts: parsedContacts });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.props.contacts !== prevProps.contacts &&\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n  }\n  deleteContact = (id) => {\n    this.props.deleteContact(id);\n  };\n\n  addContact = (contactData) => {\n    this.props.addContact(contactData);\n    info({ text: `Contact successfully added`, delay: 700 });\n  };\n\n  filterOnChange = ({ target }) => this.props.filterOnChange(target.value);\n\n  render() {\n    return (\n      <>\n        <div className=\"phonebook__wrapper\">\n          <div className=\"form-wrapper\">\n            <h1 className=\"headline\">Phonebook</h1>\n\n            <h2>Add new contact</h2>\n            <ContactForm onSubmitHandler={this.addContact} />\n          </div>\n          <div className=\"list-wrapper\">\n            <h2>Contacts</h2>\n            <Filter />\n\n            {this.props.filter && <Message />}\n\n            <ContactList\n              deleteContact={this.deleteContact}\n              contacts={this.props.filteredContacts}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst filterContacts = (query, contacts) =>\n  contacts.filter((element) =>\n    element.name.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n  );\n\nconst mapStateToProps = ({ contacts }) => ({\n  filteredContacts: filterContacts(contacts.filter, contacts.items),\n  contacts: contacts.items,\n  filter: contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (contact) => dispatch(addContact(contact)),\n  deleteContact: (contact) => dispatch(deleteContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { addContact, deleteContact } from \"./items-actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const items = createReducer([], {\n  [addContact.type]: (state, { payload }) => [...state, payload],\n  [deleteContact.type]: (state, { payload }) => [\n    ...state.filter((element) => element.id !== payload),\n  ],\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./filter-actions\";\n\nexport const filter = createReducer(\"\", {\n  [changeFilter.type]: (_, { payload }) => payload,\n});\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { items } from \"./items/items-reducers\";\nimport { filter } from \"./filter/filter-reducers\";\n\nexport const contacts = combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { contacts } from \"./contacts/contacts-reducers\";\n\nexport const store = configureStore({\n  reducer: { contacts },\n  devTools: process.env.NODE_ENV === \"development\",\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}