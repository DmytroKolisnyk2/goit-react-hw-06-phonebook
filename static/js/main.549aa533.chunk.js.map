{"version":3,"sources":["redux/store.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Message/Message.jsx","App.jsx","index.js"],"names":["FILTER","rootReducer","combineReducers","filter","state","action","type","payload","store","createStore","devToolsEnhancer","INITIAL_STATE","name","number","ContactForm","nameId","nanoid","numberId","reset","setState","onInputHandler","target","value","onSubmitHandler","event","preventDefault","props","contacts","find","item","info","text","delay","contactData","id","className","onSubmit","this","htmlFor","pattern","title","required","onChange","Component","ContactItem","deleteContact","onClick","ContactList","map","filterId","Filter","console","log","Message","App","prevState","element","addContact","filterOnChange","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","query","toLocaleLowerCase","visibleContacts","includes","connect","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549aa533.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n// Action types\nconst FILTER = 'filter';\nconst DECREMENT = 'timer/decrement';\n\n// Action creators\nexport function changeFilter(value) {\n  return {\n    type: FILTER,\n    payload: value,\n  };\n}\n\n\n// Reducer\nfunction filter(state = '', action) {\n  switch (action.type) {\n    case FILTER:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  filter,\n\n});\n\n// Store\nexport const store = createStore(rootReducer, devToolsEnhancer());\n","import \"./ContactForm.scss\";\nimport { nanoid } from \"nanoid\";\nimport { info } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  nameId = nanoid();\n  numberId = nanoid();\n\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  onInputHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const { contacts } = this.props;\n    if (!contacts.find((item) => item.name === this.state.name)) {\n      const contactData = { name: this.state.name, number: this.state.number, id: nanoid() };\n      this.props.onSubmitHandler(contactData);\n      this.reset();\n    } else {\n      info({ text: `${this.state.name} is already in contacts.`, delay: 700 });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onSubmitHandler}>\n        <label className=\"form__title\" htmlFor={this.nameId}>\n          <h3 className=\"phonebook__headline\">Name</h3>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <label className=\"form__title\" htmlFor={this.numberId}>\n          <h3 className=\"phonebook__headline\">Number</h3>\n          <input\n            className=\"form__input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={this.numberId}\n            value={this.state.number}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <button className=\"form__submit\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onSubmitHandler: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ContactItem.scss\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactItem({ name, number, deleteContact }) {\n  return (\n    <li className=\"list__item\">\n      <p className=\"list__text\">\n        <span>{name} :</span> {number}\n      </p>\n      <button className=\"list__btn\" onClick={deleteContact} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className=\"list\">\n      {contacts.map((item) => (\n        <ContactItem\n          deleteContact={() => deleteContact(item.id)}\n          key={item.id}\n          name={item.name}\n          number={item.number}\n        />\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport './Filter.scss';\nimport PropTypes from 'prop-types';\n\nconst filterId = nanoid();\n\nexport default function Filter({onChange,value}) {\n  return (\n    <div className=\"filter\">\n      {console.log(onChange)}\n      <h3 className=\"phonebook__headline\">Find contact by name</h3>\n      <label className=\"filter__title\" htmlFor={filterId}>\n        <input value={value} onChange={onChange} className=\"filter__input\" type=\"text\" name=\"filter\" id={filterId} />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n}","import React from 'react';\nimport './Message.scss';\n\nexport default function Message() {\n  return <h3 className=\"message__headline\">Filtered results:</h3>;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { info } from \"@pnotify/core\";\n\nimport { changeFilter } from \"./redux/store\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Message from \"./components/Message/Message\";\n\nimport \"./styles/App.scss\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    // filter: \"\",\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    parsedContacts && this.setState({ contacts: parsedContacts });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.state.contacts);\n    this.state.contacts !== prevState.contacts &&\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  }\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((element) => element.id !== id),\n    }));\n  };\n\n  addContact = (contactData) => {\n    this.setState((prevState) => ({\n      contacts: [contactData, ...prevState.contacts],\n    }));\n    info({ text: `Contact successfully added`, delay: 700 });\n  };\n\n  filterOnChange = ({ target }) => {\n    this.setState({ filter: target.value });\n  };\n\n  render() {\n    const { contacts } = this.state;\n\n    const query = this.props.filter.toLocaleLowerCase();\n    const visibleContacts = contacts.filter((element) =>\n      element.name.toLocaleLowerCase().includes(query)\n    );\n\n    return (\n      <>\n        <div className=\"phonebook__wrapper\">\n          <div className=\"form-wrapper\">\n            <h1 className=\"headline\">Phonebook</h1>\n\n            <h2>Add new contact</h2>\n            <ContactForm onSubmitHandler={this.addContact} contacts={contacts} />\n          </div>\n          <div className=\"list-wrapper\">\n            <h2>Contacts</h2>\n            <Filter value={this.props.filter} onChange={this.props.filterOnChange} />\n\n            {/* Додаткова опція)) */}\n            {this.props.filter && <Message />}\n\n            <ContactList deleteContact={this.deleteContact} contacts={visibleContacts} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ filter: state.filter });\nconst mapDispatchToProps = (dispatch) => ({\n  filterOnChange: () => dispatch(changeFilter(\"Соня ти ЛОХ\")),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}