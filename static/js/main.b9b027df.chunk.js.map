{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Message/Message.jsx","App.jsx","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","nameId","nanoid","numberId","reset","setState","onInputHandler","target","value","onSubmitHandler","event","preventDefault","props","contacts","find","item","info","text","delay","contactData","id","className","onSubmit","this","htmlFor","type","pattern","title","required","onChange","Component","ContactItem","deleteContact","onClick","ContactList","map","filterId","Filter","Message","App","filter","prevState","element","addContact","filterOnChange","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","query","toLocaleLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9b027df.chunk.js","sourcesContent":["import \"./ContactForm.scss\";\nimport { nanoid } from \"nanoid\";\nimport { info } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  nameId = nanoid();\n  numberId = nanoid();\n\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  onInputHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const { contacts } = this.props;\n    if (!contacts.find((item) => item.name === this.state.name)) {\n      const contactData = { name: this.state.name, number: this.state.number, id: nanoid() };\n      this.props.onSubmitHandler(contactData);\n      this.reset();\n    } else {\n      info({ text: `${this.state.name} is already in contacts.`, delay: 700 });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onSubmitHandler}>\n        <label className=\"form__title\" htmlFor={this.nameId}>\n          <h3 className=\"phonebook__headline\">Name</h3>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <label className=\"form__title\" htmlFor={this.numberId}>\n          <h3 className=\"phonebook__headline\">Number</h3>\n          <input\n            className=\"form__input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={this.numberId}\n            value={this.state.number}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <button className=\"form__submit\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onSubmitHandler: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ContactItem.scss\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactItem({ name, number, deleteContact }) {\n  return (\n    <li className=\"list__item\">\n      <p className=\"list__text\">\n        <span>{name} :</span> {number}\n      </p>\n      <button className=\"list__btn\" onClick={deleteContact} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className=\"list\">\n      {contacts.map((item) => (\n        <ContactItem\n          deleteContact={() => deleteContact(item.id)}\n          key={item.id}\n          name={item.name}\n          number={item.number}\n        />\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport './Filter.scss';\nimport PropTypes from 'prop-types';\n\nconst filterId = nanoid();\n\nexport default function Filter({onChange,value}) {\n  return (\n    <div className=\"filter\">\n      <h3 className=\"phonebook__headline\">Find contact by name</h3>\n      <label className=\"filter__title\" htmlFor={filterId}>\n        <input value={value} onChange={onChange} className=\"filter__input\" type=\"text\" name=\"filter\" id={filterId} />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n}","import React from 'react';\nimport './Message.scss';\n\nexport default function Message() {\n  return <h3 className=\"message__headline\">Filtered results:</h3>;\n}\n","import React, { Component } from \"react\";\nimport { info } from \"@pnotify/core\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Message from \"./components/Message/Message\";\n\nimport \"./styles/App.scss\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    parsedContacts && this.setState({ contacts: parsedContacts });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.state.contacts !== prevState.contacts &&\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  }\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((element) => element.id !== id),\n    }));\n  };\n\n  addContact = (contactData) => {\n    this.setState((prevState) => ({\n      contacts: [contactData, ...prevState.contacts],\n    }));\n    info({ text: `Contact successfully added`, delay: 700 });\n  };\n\n  filterOnChange = ({ target }) => {\n    this.setState({ filter: target.value });\n  };\n\n  render() {\n const { filter, contacts } = this.state;\n\n    const query = filter.toLocaleLowerCase();\n    const visibleContacts = contacts.filter((element) =>\n      element.name.toLocaleLowerCase().includes(query)\n    );\n\n    return (\n      <>\n        <div className=\"phonebook__wrapper\">\n          <div className=\"form-wrapper\">\n            <h1 className=\"headline\">Phonebook</h1>\n\n            <h2>Add new contact</h2>\n            <ContactForm onSubmitHandler={this.addContact} contacts={contacts} />\n          </div>\n          <div className=\"list-wrapper\">\n            <h2>Contacts</h2>\n            <Filter value={filter} onChange={this.filterOnChange} />\n\n            {/* Додаткова опція)) */}\n            {filter && <Message />}\n\n            <ContactList deleteContact={this.deleteContact} contacts={visibleContacts} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}