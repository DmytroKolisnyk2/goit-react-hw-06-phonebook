{"version":3,"sources":["redux/contacts/items/items-actions.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","redux/contacts/items/items-reducers.js","redux/contacts/filter/filter-actions.js","redux/contacts/filter/filter-reducers.js","redux/contacts/contacts-reducers.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Message/Message.jsx","App.jsx","redux/store.js","index.js"],"names":["addContact","createAction","deleteContact","INITIAL_STATE","name","number","ContactForm","state","nameId","nanoid","numberId","reset","setState","onInputHandler","target","value","contactData","props","info","text","delay","onSubmitHandler","event","preventDefault","contacts","find","item","id","className","onSubmit","this","htmlFor","type","pattern","title","required","onChange","Component","connect","items","dispatch","contact","ContactItem","onClick","createReducer","payload","filter","element","changeFilter","_","combineReducers","filterContacts","query","toLocaleLowerCase","includes","map","filterId","filteredContacts","length","App","persistConfig","key","storage","blacklist","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.959fe5b1.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contacts/add\");\nexport const deleteContact = createAction(\"contacts/delete\");\n","import \"./ContactForm.scss\";\nimport { nanoid } from \"nanoid\";\nimport { info } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/items/items-actions\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  nameId = nanoid();\n  numberId = nanoid();\n\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  onInputHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n  addContact = (contactData) => {\n    this.props.addContact(contactData);\n    info({ text: `Contact successfully added`, delay: 700 });\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const { contacts } = this.props;\n    if (!contacts.find((item) => item.name === this.state.name)) {\n      const contactData = { name: this.state.name, number: this.state.number, id: nanoid() };\n      this.addContact(contactData);\n      this.reset();\n    } else {\n      info({ text: `${this.state.name} is already in contacts.`, delay: 700 });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onSubmitHandler}>\n        <label className=\"form__title\" htmlFor={this.nameId}>\n          <h3 className=\"phonebook__headline\">Name</h3>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <label className=\"form__title\" htmlFor={this.numberId}>\n          <h3 className=\"phonebook__headline\">Number</h3>\n          <input\n            className=\"form__input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={this.numberId}\n            value={this.state.number}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <button className=\"form__submit\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (contact) => dispatch(addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  addContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ContactItem.scss\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactItem({ name, number, deleteContact }) {\n  return (\n    <li className=\"list__item\">\n      <p className=\"list__text\">\n        <span>{name} :</span> {number}\n      </p>\n      <button className=\"list__btn\" onClick={deleteContact} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};","import { addContact, deleteContact } from \"./items-actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const items = createReducer([], {\n  [addContact.type]: (state, { payload }) => [...state, payload],\n  [deleteContact.type]: (state, { payload }) => [\n    ...state.filter((element) => element.id !== payload),\n  ],\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/filter\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./filter-actions\";\n\nexport const filter = createReducer(\"\", {\n  [changeFilter.type]: (_, { payload }) => payload,\n});\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { items } from \"./items/items-reducers\";\nimport { filter } from \"./filter/filter-reducers\";\n\nexport const contacts = combineReducers({\n  items,\n  filter,\n});\n\nexport const filterContacts = (query, contacts) =>\n  contacts.filter((element) =>\n    element.name.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n  );","import React from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/items/items-actions\";\nimport { filterContacts } from \"../../redux/contacts/contacts-reducers\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className=\"list\">\n      {contacts.map((item) => (\n        <ContactItem\n          deleteContact={() => deleteContact(item.id)}\n          key={item.id}\n          name={item.name}\n          number={item.number}\n        />\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: filterContacts(contacts.filter, contacts.items),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (contact) => dispatch(deleteContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./Filter.scss\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/filter/filter-actions\";\n\nconst filterId = nanoid();\n\nfunction Filter({ onChange, value }) {\n  return (\n    <div className=\"filter\">\n      <h3 className=\"phonebook__headline\">Find contact by name</h3>\n      <label className=\"filter__title\" htmlFor={filterId}>\n        <input\n          value={value}\n          onChange={onChange}\n          className=\"filter__input\"\n          type=\"text\"\n          name=\"filter\"\n          id={filterId}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  value: contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: ({ target }) => dispatch(changeFilter(target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport \"./Message.scss\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { filterContacts } from \"../../redux/contacts/contacts-reducers\";\n\nfunction Message({ filter,filteredContacts }) {\n  return (\n    filter && (\n      <h3 className=\"message__headline\">\n        {filteredContacts.length === 0 ? \"Opps, no contacts found\" : \"Filtered results:\"}\n      </h3>\n    )\n  );\n}\n\nconst mapStateToProps = ({ contacts }) => ({\n  filter: contacts.filter,\n  filteredContacts: filterContacts(contacts.filter, contacts.items),\n});\n\nexport default connect(mapStateToProps, null)(Message);\n\nMessage.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Message from \"./components/Message/Message\";\n\nimport \"./styles/App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"phonebook__wrapper\">\n          <div className=\"form-wrapper\">\n            <h1 className=\"headline\">Phonebook</h1>\n            <h2>Add new contact</h2>\n            <ContactForm />\n          </div>\n          <div className=\"list-wrapper\">\n            <h2>Contacts</h2>\n            <Filter />\n            <Message />\n\n            <ContactList />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { contacts } from \"./contacts/contacts-reducers\";\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"hw-06-phonebook\",\n  storage,\n  blacklist: ['contacts.filter'],\n};\n\nconst rootReducer = combineReducers({ contacts });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}